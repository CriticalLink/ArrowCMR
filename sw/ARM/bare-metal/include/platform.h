/*******************************************************************************
Copyright (c) 2016 - Analog Devices Inc. All Rights Reserved.
This software is proprietary & confidential to Analog Devices, Inc.
and its licensors.
********************************************************************************
File Name: platform.h

Generation Date: 2016-10-24
Generated By: Christian Aaen
*******************************************************************************/

#ifndef PLATFORM_H_
#define PLATFORM_H_
#include <hwlib.h>
#include <alt_generalpurpose_io.h>
#include <alt_interrupt.h>
#include "alt_16550_buffer.h"

#define UNUSED(x) (void)(x)
typedef enum
{
    SFE_SUCCESS,
    SFE_DRIVER_ERROR
} sfeStatus_t;

typedef float         real32_t;

sfeStatus_t platformInit(void);

/**
 * PWM FPGA Core location
 */
/* 	Define the base memory address of PWM IP core */
#define PWM_BASE 0xFF201000
#define PWM_IRQ_BASE PWM_BASE
#define PWM_IRQ_ID ALT_INT_INTERRUPT_F2S_FPGA_IRQ4

/**
 * QEP FPGA Core location
 */
#define QEP_BASE 0xFF202000

/**
 * SINC FPGA Core location
 */
#define SINC_BASE 0xFF203000
#define SINC_DATA_IRQ_BASE SINC_BASE
#define SINC_DATA_IRQ_ID ALT_INT_INTERRUPT_F2S_FPGA_IRQ5

#define SET_IRQ_PRIORITY
#define	UART_IRQ_PRIORITY			20
#define	SINC_DATA_IRQ_PRIORITY		21
#define	MOTOR_PWM_IRQ_PRIORITY		22

//#define GPIO_LED0 = N/A (FPGA direct connect)
// All on GPIO_PORTB
#define GPIO_LED1 ALT_GPIO_BIT21 // uart_send
#define GPIO_LED2 ALT_GPIO_BIT20 // PwmIsr toggle
#define GPIO_LED3 ALT_GPIO_BIT19 // OK to capture
#define GPIO_LED4 ALT_GPIO_BIT15 // SincDataIsr
#define GPIO_LED5 ALT_GPIO_BIT11 // app init (in main), dump_buffer_to_uart
#define GPIO_LED6 ALT_GPIO_BIT12 // Error indicator
#define GPIO_LED7 ALT_GPIO_BIT13 // sMcAlgoritm gate

#define GPIO_SW3 ALT_GPIO_BIT27
#define GPIO_SW4 ALT_GPIO_BIT26
#define GPIO_SW5 ALT_GPIO_BIT25
#define GPIO_SW6 ALT_GPIO_BIT24

void SetLed(uint32_t led, int on);

int SwitchState(uint32_t sw);

extern void enable_console(int enable);
void failExit(const char *msg);
extern ALT_16550_BUFFER_t g_uart0_buffer;

/**
 * from conter_config.c - PMU counter control
 */
void start_pmu_counters(void);
void stop_pmu_counters(void);
void display_counters(void);
#endif
